name: CI/CD DevSecOps

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Installer Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Lancer les tests Maven
        run: mvn clean test

  sonarcloud-analysis:
    name: Analyse SonarCloud
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Installer Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Lancer l'analyse SonarCloud via Maven
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn clean verify sonar:sonar -Dsonar.projectKey=MDK095_springboot-devsecops -Dsonar.organization=mdk095 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  docker-build-push:
    name: Docker Build & Push
    needs: sonarcloud-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Connexion Ã  DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build de l'image Docker
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/demo-app:latest .

      - name: Push vers DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/demo-app:latest

